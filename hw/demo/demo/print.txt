
#include <string>
#include <iostream>
class B {
public:
    B( ) { }
    void m1( ) {std::cout << "B::m1" << std::endl;}
    virtual void m2( ) {
        std::cout << "B::m2" << std::endl;
    }
private:
    virtual void m3( ) {
        std::cout << "B::m3" << std::endl;
    }
    virtual void m4( ) {
        std::cout << "B::m4" << std::endl;
    }
};
class D1 : public B {
public:
    D1( ) { }
    ~D1( ) { };
    void m1( ) {
        std::cout << "D1::m1" << std::endl;
    }
    void m2( ) {
        std::cout << "D1::m2" << std::endl;
    }
private:
    virtual void m3( ) {
        std::cout << "D1::m3" << std::endl;
    }
    virtual void m4( ) {
        std::cout << "D1::m4" << std::endl;
    }
};
class D2 : public D1 {
public:
    D2( ) { };
    ~D2( ) { };
    void m1( ) {
        std::cout << "D2::m1" << std::endl;
    }
    virtual void m2( ) {
        std::cout << "D2::m2" << std::endl;
    }
private:
    void m3( ) {
        std::cout << "D2::m3" << std::endl;
    }
    virtual void m4( ) {
        std::cout << "D2::m4" << std::endl;
    }
};

int main(int argc, char * argv[ ]) {

    B b; B* bP = &b; B& bR = b;
    D1 d1; D1* d1P = &d1; D1& d1R = d1;
    D2 d2; D2* d2P = &d2; D2& d2R = d2;
    
    b = d1; bP = d1P; bR = d1R;
    
    b.m1();
    bP->m1();
    bR.m1();
    
    d1.m1( );
    d1P->m1();
    d1R.m1();
    
    d2.m1();
    d2P->m1();
    d2R.m1();

}




B::m1
B::m1
B::m1
D1::m1
D1::m1
D1::m1
D2::m1
D2::m1
D2::m1


B::m1
D1::m1
B::m1
D1::m1
D1::m1
D1::m1
D2::m1
D2::m1
D2::m1
